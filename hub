local Players = game:GetService("Players")
local plr = game.Players.LocalPlayer
local version = "1.9"
local loopList = {
    [1] = "Way-Up-High Upgrader",
    [2] = "Freon-Blast Upgrader",
    [3] = "Large Ore Upgrader",
    [4] = "Solar Large Upgrader",
    [5] = "Ore Purifier Machine"
}
local capList = {
    [1] = 4e+5,
    [2] = 5e+7,
    [3] = 5000,
    [4] = 5000,
    [5] = 1000
}
if game.PlaceId == 258258996 then
    local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/jensonhirst/Orion/main/source')))()
	local Window = OrionLib:MakeWindow({
        Name = "MH FKR v" ..version,
        HidePremium = true, 
        SaveConfig = true, 
        ConfigFolder = "hub/MHfkr", 
        IntroEnabled = true, 
        IntroText = "Welcome to MH FKR v"..version..", "..plr.Name, 
        IntroIcon = "rbxassetid://5670621915", 
        Icon = "rbxassetid://5670621915",
        CloseCallback = function()
            game.CoreGui.HiddenUI.Orion.Enabled = false
        end
    })
	
    local Base = plr.PlayerTycoon.Value.Base
    local myfac = Players.LocalPlayer.PlayerTycoon.Value
    myfacName = tostring(myfac)

    -------------------------- Functions
    function getUpgraders()
        local Upgraders = nil
        local Resetters = nil
        local Upgraders = {}
        local Resetters = {}
        local resetCount = 0
        for i, v in pairs(myfac:GetChildren()) do
            if string.match(v.Name, "Tesla") or string.match(v.Name, "Void Star") or string.match(v.Name, "Black Dwarf") or v.Name == "The Final Upgrader" or v.Name == "The Ultimate Sacrifice" or v.Name == "Daestrophe" then
                table.insert(Resetters, v.Model.Upgrade)
            elseif v:FindFirstChild("Model") and v.Model:FindFirstChild("Upgrade2") then
                table.insert(Upgraders, v.Model.Upgrade2)
            elseif v:FindFirstChild("Model") and v.Model:FindFirstChild("Upgrade") then
                table.insert(Upgraders, v.Model.Upgrade)
            elseif v:FindFirstChild("Model") and v.Model:FindFirstChild("Upgrader") then
                table.insert(Upgraders, v.Model.Upgrader)
            end
        end
        for i=1, #Upgraders do
            Upgraders[i].Position = Base.Position + Vector3.new(0,100,0)
            Upgraders[i].Size = Vector3.new(1,1,1)
            Upgraders[i].Rotation = Vector3.new(0,0,0)
            Upgraders[i].Transparency = 1
        end
        for i=1, #Resetters do
            resetCount = resetCount + 1
            Resetters[i].Size = Vector3.new(1,1,1)
            Resetters[i].Rotation = Vector3.new(0,0,0)
            Resetters[i].Transparency = 1
        end
        if resetCount == 4 then
            Resetters[4].Position = Base.Position + Vector3.new(0,200,0)
            Resetters[3].Position = Base.Position + Vector3.new(0,175,0)
            Resetters[2].Position = Base.Position + Vector3.new(0,150,0)
            Resetters[1].Position = Base.Position + Vector3.new(0,125,0)
        elseif resetCount == 3 then
            Resetters[3].Position = Base.Position + Vector3.new(0,175,0)
            Resetters[2].Position = Base.Position + Vector3.new(0,150,0)
            Resetters[1].Position = Base.Position + Vector3.new(0,125,0)
        elseif resetCount == 2 then
            Resetters[2].Position = Base.Position + Vector3.new(0,150,0)
            Resetters[1].Position = Base.Position + Vector3.new(0,125,0)
        elseif resetCount == 1 then
            Resetters[1].Position = Base.Position + Vector3.new(0,125,0)
        end 
    end
    function Upgrade(ore)
        ore.Position = Base.Position + Vector3.new(0,102,0)
        wait()
        ore.Position = Base.Position + Vector3.new(0,102,0)
        wait()
    end
    function autoRemote()
        while getgenv().AutoRemote == true do
            for i, v in pairs(myfac:GetDescendants()) do
                if v.Name == "DropRate" then
                    if v.Value == "Manual" then
                        game:GetService("ReplicatedStorage"):WaitForChild("RemoteDrop"):FireServer()
                    end
                end
            end
            wait(.01)
        end
    end
    function openBoxes()
        while getgenv().BoxOpen == true do
            local box = {
                [1] = boxoption
            }
            game:GetService("ReplicatedStorage"):WaitForChild("MysteryBox"):InvokeServer(unpack(box))
            wait(5)
        end
    end
    function currentBoxes()
        if getgenv().BoxFarm then
            local originalPosition = plr.Character.HumanoidRootPart.CFrame
            local function teleportBack()
                plr.Character.HumanoidRootPart.CFrame = originalPosition * CFrame.new(0,0,0)
            end
            for _,v in pairs(game.Workspace.Boxes:GetChildren()) do
                plr.Character.HumanoidRootPart.CFrame = v.CFrame * CFrame.new(0,0,0)
                wait(.2)
            end
            wait(.2)
            teleportBack()
            if getgenv().AutoReborn then
                if string.match(game:GetService("Players").LocalPlayer.PlayerGui.Rebirth.Frame.Rebirth_Content.Content.Rebirth.Frame.Top.SkipBox.Label.Text, "Skip") then
                    game:GetService("ReplicatedStorage").Rebirth:InvokeServer()
                end
            end
        end
    end


    ---------------------------

	local Main = Window:MakeTab({
		Name = "Main",
        Icon = "rbxassetid://5506574548",
        PremiumOnly = false
	})

    local rbSection = Main:AddSection({Name = "Rebirthing"})

    rbSection:AddToggle({
        Name = "Auto Reborn",
        Default = false,
        Callback = function(v)
            getgenv().AutoReborn = v
        end
    })
    
    rbSection:AddSlider({
        Name = "Reborn Delay",
        Min = 0,
        Max = 20,
        Default = 0,
        Color = Color3.fromRGB(255,255,255),
        Increment = 1,
        ValueName = "seconds",
        Callback = function(v)
            local rebornDelay = v
        end
    })

    rbSection:AddSlider({
        Name = "Delay Variance",
        Min = 0,
        Max = 20,
        Default = 0,
        Color = Color3.fromRGB(255,255,255),
        Increment = 1,
        ValueName = "seconds",
        Callback = function(v)
            local delayVariance = v
        end
    })

    local laySection = Main:AddSection({Name = "Layouts"})

    laySection:AddToggle({
        Name = "Auto Layout",
        Default = false,
        Callback = function(v)
            getgenv().AutoLayout = v
        end
    })

    laySection:AddDropdown({
        Name = "Auto Layout",
        Default = "One",
        Options = {"One", "Two", "Three", "Four"},
        Callback = function(v)
            if v == "One" then
                layoutNum = "Layout1"
            elseif v == "Two" then
                layoutNum = "Layout2"
            elseif v == "Three" then
                layoutNum = "Layout3"
            elseif v == "Four" then
                layoutNum = "Layout4"
            end
        end
    })

    local oreSection = Main:AddSection({Name = "Ores"})

    oreSection:AddToggle({
        Name = "Ore Boost",
        Default = false,
        Callback = function(v)
            getgenv().OreBoost = v
        end
    })
    
    oreSection:AddToggle({
        Name = "Spawn Ores at Furnace",
        Default = false,
        Callback = function(v)
            getgenv().OreFurnace = v
        end
    })

    oreSection:AddToggle({
        Name = "Auto Remote",
        Default = false,
        Callback = function(v)
            getgenv().AutoRemote = v
            autoRemote()
        end
    })

    oreSection:AddButton({
        Name = "TP Ores",
        Callback = function()
            for i, v in pairs(game.Workspace.DroppedParts:GetChildren()) do
                v.CFrame = plr.Character.HumanoidRootPart.CFrame
            end
        end
    })

    oreSection:AddToggle({
        Name = "Become The Ore",
        Default = false,
        Callback = function(v)
            getgenv().BecomeTheOre = v
        end
    })

    local BoxWin = Window:MakeTab({
        Name = "Boxes",
        Icon = "rbxassetid://5140907242",
        PremiumOnly = false
    })

    local boxSection = BoxWin:AddSection({Name = "Boxes"})

    boxSection:AddToggle({
        Name = "Box Farm",
        Default = false,
        Callback = function(v)
            getgenv().BoxFarm = v
            currentBoxes()
        end
    })

    boxSection:AddToggle({
        Name = "Open Boxes",
        Default = false,
        Callback = function(v)
            getgenv().BoxOpen = v
            openBoxes()
        end
    })

    boxSection:AddDropdown({
        Name = "Box Options",
        Default = "Regular",
        Options = {"Regular", "Unreal", "Inferno", "Easter", "Festive", "Pumpkin", "Spectral"},
        Callback = function(v)
            BoxOption = v
        end
    })
    --[[
    boxSection:AddButton({
        Name = "Claim Daily Box",
        Callback = function()
            --
        end
    })
    --]]
    local guiWin = Window:MakeTab({
        Name = "GUIs",
        Icon = "rbxassetid://5670621831",
        PremiumOnly = false
    })

    local guiSection1 = guiWin:AddSection({Name = "Useful"})

    guiSection1:AddButton({
        Name = "Craftsman",
        Callback = function()
            plr.Character.HumanoidRootPart.CFrame = game.Workspace.Map.TeleporterModel.TowerInterior.CFrame * CFrame.new(0,0,0)
        end
    })

    guiSection1:AddButton({
        Name = "Masked Man",
        Callback = function()
            plr.PlayerGui.GUI.EventShop.Visible = true
        end
    })

    guiSection1:AddButton({
        Name = "Superstitious",
        Callback = function()
            plr.Character.HumanoidRootPart.CFrame = game.Workspace.Map.TeleporterModel.Temple.CFrame * CFrame.new(0,0,0)
        end
    })

    guiSection1:AddButton({
        Name = "Box Man",
        Callback = function()
            plr.PlayerGui.GUI.SpookMcDookShop.Visible = true
        end
    })

    guiSection1:AddButton({
        Name = "Fargield",
        Callback = function()
            plr.Character.HumanoidRootPart.CFrame = CFrame.new(-322, 104, 529) * CFrame.new(0,0,0)
        end
    })

    guiSection1:AddButton({
        Name = "John Doe",
        Callback = function()
            plr.Character.HumanoidRootPart.CFrame = CFrame.new(-729, 41, -32) * CFrame.new(0,0,0)
        end
    })

    local plrWin = Window:MakeTab({
		Name = "Player",
        Icon = Players:GetUserThumbnailAsync(plr.UserId, Enum.ThumbnailType.HeadShot, Enum.ThumbnailSize.Size100x100),
        PremiumOnly = false
	})

    local plrSection1 = plrWin:AddSection({Name = "Teleports"})

    plrSection1:AddButton({
        Name = "Teleport to Base",
        Callback = function()
            plr.Character.HumanoidRootPart.CFrame = Base.CFrame * CFrame.new(0,3,0)
        end
    })

    plrSection1:AddButton({
        Name = "Teleport to Leaderboards",
        Callback = function()
            plr.Character.HumanoidRootPart.CFrame = CFrame.new(-62, 179, 323) * CFrame.new(0,0,0)
        end
    })
    
    local plrSection2 = plrWin:AddSection({Name = "Attributes"})

    plrSection2:AddSlider({
        Name = "Walk Speed",
        Min = 16,
        Max = 300,
        Default = plr.Character.Humanoid.WalkSpeed,
        Color = Color3.fromRGB(255,255,255),
        Increment = 1,
        ValueName = "",
        Callback = function(v)
            plr.Character.Humanoid.WalkSpeed = v
            speed = v
        end
    })

    plrSection2:AddSlider({
        Name = "Jump Power",
        Min = 50,
        Max = 300,
        Default = plr.Character.Humanoid.JumpPower,
        Color = Color3.fromRGB(255,255,255),
        Increment = 1,
        ValueName = "",
        Callback = function(v)
            plr.Character.Humanoid.JumpPower = v
            jump = v
        end
    })

    plrSection2:AddToggle({
        Name = "Lock Attributes",
        Default = false,
        Callback = function(v)
            getgenv().Speed = v
            getgenv().Jump = v
        end
    })

    plrSection2:AddToggle({
        Name = "Shiny Tracker",
        Default = false,
        Callback = function(v)
            getgenv().ShinyTrack = v
        end
    })


    local setWin = Window:MakeTab({
		Name = "Settings",
        Icon = "rbxassetid://5506279557",
        PremiumOnly = false
	})

    local setSection = setWin:AddSection({Name = "Settings"})

    setSection:AddButton({
        Name = "Destroy GUI",
        Callback = function()
            OrionLib:Destroy()
        end
    })

    setSection:AddBind({
        Name = "UI Keybind",
        Default = Enum.KeyCode.V,
        Hold = false,
        Callback = function()
            for i, v in pairs(game.CoreGui.HiddenUI.Orion:GetDescendants()) do
                if v:IsA("TextLabel") and v.Text == "MH FKR v1.9" then
                    frame = v.Parent.Parent
                end
            end
            if frame.Visible == false then
                frame.Visible = true
                frame:TweenSize(UDim2.new(0,615,0,344), Enum.EasingDirection.In, Enum.EasingStyle.Linear, 0.2, true)
            elseif frame.Visible == true then
                frame:TweenSize(UDim2.new(0, 0, 0, 0), Enum.EasingDirection.In, Enum.EasingStyle.Linear, 0.2, true)
                wait(0.2)
                frame.Visible = false
            end
        end    
    })

    for i, v in pairs(game.Workspace.LeaderboardModels:GetDescendants()) do
        if v.Name == plr.Name or v.Name == plr.DisplayName then
            print(v.DisplayName.Username.Text, v.DisplayName.Data.Text, v.Rank.Text, v.Parent.Parent.Top.TextLabel.Text)
            OrionLib:MakeNotification({
                Name = "Leaderboard Alert",
                Content = tostring(v.DisplayName.Username.Text, v.DisplayName.Data.Text, v.Rank.Text, v.Parent.Parent.Top.TextLabel.Text),
                Image = 0,
                Time = 1e+999
            })
        end
    end

    -----------------------------------------------------

    game.Workspace.DroppedParts[myfacName].ChildAdded:Connect(function(ore)
        if getgenv().OreBoost then
            task.spawn(function()
                if string.match(ore.Name, "Coal") then
                    for i, v in pairs(myfac:GetChildren()) do
                        if string.match(v.Name, "Industrial") or string.match(v.Name, "Vulcan's Wrath") then
                            ore.Position = v.Model.Lava.Position + Vector3.new(0,0.5,0)
                            ore.Velocity = Vector3.new(0,0,0)
                            task.wait()
                        end
                    end
                    return
                end
                getUpgraders()
                Upgrade(ore)
                if resetCount == 1 then
                    ore.Position = Base.Position + Vector3.new(0,127,0)
                    task.wait()
                    Upgrade(ore)
                end
                if resetCount == 2 then
                    ore.Position = Base.Position + Vector3.new(0,152,0)
                    task.wait()
                    Upgrade(ore)
                end
                if resetCount == 3 then
                    ore.Position = Base.Position + Vector3.new(0,177,0)
                    task.wait()
                    Upgrade(ore)
                end
                if resetCount == 4 then
                    ore.Position = Base.Position + Vector3.new(0,202,0)
                    task.wait()
                    Upgrade(ore)
                end
                for i, v in pairs(myfac:GetDescendants()) do
                    if v.Name == "Lava" and v:IsA("Part") then
                        if v.Parent.Parent.Name:match("Dreamer") or v.Parent.Parent.Name:match("Teleport") or v.Parent.Parent.Name:match("Industrial") then
                            if v.Parent.Parent.Name == "Dreamer's Might" then
                                ore.Position = v.Position + Vector3.new(0,3,0)
                                ore.Velocity = Vector3.new(0,0,0)
                                task.wait()
                            end
                        else
                            ore.Position = v.Position + Vector3.new(0,3,0)
                            ore.Velocity = Vector3.new(0,0,0)
                            task.wait()
                        end
                    end
                end		
            end)
        end
        if getgenv().OreFurnace then
            task.spawn(function()
                if furnace then
                    ore.Position = furnace.Position + Vector3.new(0,0.5,0)
                else
                    for i, v in pairs(myfac:GetChildren()) do
                        if v:IsA("Model") then
                            if v:FindFirstChild("Model") then
                                if string.match(v.Parent.Parent.Name, "Teleport") then
                                elseif string.match(ore.Name, "Coal") and string.match(v.Parent.Parent.Name, "Industrial") then
                                    ore.Position = v.Position + Vector3.new(0,0.5,0)
                                    furnace = v
                                else
                                    ore.Position = v.Position + Vector3.new(0,0.5,0)
                                    furnace = v
                                end
                            end
                        end
                    end
                end
            end)
        end
        if getgenv().BecomeTheOre then
            task.spawn(function()
                repeat
                    ore.Position = plr.Character.HumanoidRootPart.Position
                    ore.CanCollide = false
                    task.wait(.1)
                until getgenv().BecomeTheOre == false
                ore.CanCollide = true
            end)
        end
    end)

    game.Players.LocalPlayer.Rebirths:GetPropertyChangedSignal("Value"):Connect(function()
        if getgenv().AutoLayout then
            local layoutarg = {
                [1] = "Load",
                [2] = layoutNum
            }
            repeat wait() until #myfac:GetChildren() < 6
            repeat
            wait(.75)
            game:GetService("ReplicatedStorage").Layouts:InvokeServer(unpack(layoutarg))
            until #myfac:GetChildren() > 6
        end
    end)

    game.Players.LocalPlayer.leaderstats.Cash:GetPropertyChangedSignal("Value"):Connect(function()
        if getgenv().AutoReborn then
            if string.match(game:GetService("Players").LocalPlayer.PlayerGui.Rebirth.Frame.Rebirth_Content.Content.Rebirth.Frame.Top.SkipBox.Label.Text, "Skip") then
                game:GetService("ReplicatedStorage").Rebirth:InvokeServer()
            end
        end
    end)

    game.Workspace.Boxes.ChildAdded:Connect(function(Box)
        if getgenv().BoxFarm then
            task.spawn(function()
                task.wait(.2)
                local originalPosition = plr.Character.HumanoidRootPart.CFrame
                local function teleportBack()
                    plr.Character.HumanoidRootPart.CFrame = originalPosition * CFrame.new(0,0,0)
                end
                plr.Character.HumanoidRootPart.CFrame = Box.CFrame * CFrame.new(0,0,0)
                task.wait(.5)
                teleportBack()
                task.wait(.5)
                if getgenv().AutoReborn then
                    if string.match(game:GetService("Players").LocalPlayer.PlayerGui.Rebirth.Frame.Rebirth_Content.Content.Rebirth.Frame.Top.SkipBox.Label.Text, "Skip") then
                        game:GetService("ReplicatedStorage").Rebirth:InvokeServer()
                    end
                end
                if getgenv().AutoLayout then
                    task.spawn(function()
                        local layoutarg = {
                            [1] = "Load",
                            [2] = layoutNum
                        }
                        repeat wait() until #myfac:GetChildren() < 6
                        repeat
                        task.wait(.75)
                        game:GetService("ReplicatedStorage").Layouts:InvokeServer(unpack(layoutarg))
                        until #myfac:GetChildren() > 6
                    end)
                end
            end)
        end
    end)

    game.Players.LocalPlayer.Character.Humanoid:GetPropertyChangedSignal("WalkSpeed"):Connect(function()
        if getgenv().Speed then
            game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = speed
        end
    end)

    game.Players.LocalPlayer.Character.Humanoid:GetPropertyChangedSignal("JumpPower"):Connect(function()
        if getgenv().Jump then
            game.Players.LocalPlayer.Character.Humanoid.JumpPower = jump
        end
    end)

    game.Players.LocalPlayer.PlayerGui.GUI.Notifications.ChildAdded:Connect(function(notif)
        if getgenv().ShinyTrack then
            if notif.Name == "ItemTemplate" and string.match(notif.Title.Text, "⭐") then
                OrionLib:MakeNotification({
                    Name = "Shiny Acquired",
                    Content = notif.Title.Text,
                    Image = notif.Icon.Image,
                    Time = 1e+999
                })
            end
        end
    end)

    OrionLib:Init()
elseif game.PlaceId == 432041175 then
    local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/jensonhirst/Orion/main/source')))()
	local Window = OrionLib:MakeWindow({Name = "MH FKR v" ..version, HidePremium = true, SaveConfig = true, ConfigFolder = "hub/MHfkr2", IntroEnabled = true, IntroText = "Welcome to MH FKR v"..version..", "..plr.Name, IntroIcon = "rbxassetid://5670621915", Icon = "rbxassetid://5670621915"})
	
    local Base = plr.PlayerTycoon.Value.Base
    local myfac = Players.LocalPlayer.PlayerTycoon.Value
    myfacName = tostring(myfac)

    local itemNames = {}
    local itemPositions = {}

    -------------------------- Functions
    function autoRemote()
        while getgenv().AutoRemote == true do
            for i, v in pairs(myfac:GetDescendants()) do
                if v.Name == "DropRate" then
                    if v.Value == "Manual" then
                        game:GetService("ReplicatedStorage"):WaitForChild("RemoteDrop"):FireServer()
                    end
                end
            end
            wait(.01)
        end
    end
    function openBoxes()
        while getgenv().BoxOpen == true do
            local box = {
                [1] = boxoption
            }
            game:GetService("ReplicatedStorage"):WaitForChild("MysteryBox"):InvokeServer(unpack(box))
            wait(5)
        end
    end
    function currentBoxes()
        if getgenv().BoxFarm then
            local originalPosition = plr.Character.HumanoidRootPart.CFrame
            local function teleportBack()
                plr.Character.HumanoidRootPart.CFrame = originalPosition * CFrame.new(0,0,0)
            end
            for _,v in pairs(game.Workspace.Boxes:GetChildren()) do
                plr.Character.HumanoidRootPart.CFrame = v.CFrame * CFrame.new(0,0,0)
                wait(.2)
            end
            wait(.2)
            teleportBack()
            if getgenv().AutoReborn then
                if string.match(game:GetService("Players").LocalPlayer.PlayerGui.Rebirth.Frame.Rebirth_Content.Content.Rebirth.Frame.Top.SkipBox.Label.Text, "Skip") then
                    game:GetService("ReplicatedStorage").Rebirth:InvokeServer()
                end
            end
        end
    end
    function convert(cframe)
        return {cframe:components()} 
    end
    function place(num,cframe)
        local pArgs = {
            [1] = num,
            [2] = cframe,
            [3] = {
                [1] = Base
            }
        }
        game:GetService("ReplicatedStorage"):WaitForChild("PlaceItem"):InvokeServer(unpack(pArgs))
    end

    ---------------------------

	local Main = Window:MakeTab({
		Name = "Main",
        Icon = "rbxassetid://5506574548",
        PremiumOnly = false
	})

    local rbSection = Main:AddSection({Name = "Rebirthing"})

    rbSection:AddToggle({
        Name = "Auto Reborn",
        Default = false,
        Callback = function(v)
            getgenv().AutoReborn = v
        end
    })

    local laySection = Main:AddSection({Name = "Layouts"})

    laySection:AddToggle({
        Name = "Auto Layout",
        Default = false,
        Callback = function(v)
            getgenv().AutoLayout = v
        end
    })

    laySection:AddDropdown({
        Name = "Auto Layout",
        Default = "One",
        Options = {"One", "Two", "Three", "Four"},
        Callback = function(v)
            if v == "One" then
                layoutNum = v
            elseif v == "Two" then
                layoutNum = v
            elseif v == "Three" then
                layoutNum = v
            elseif v == "Four" then
                layoutNum = v
            end
        end
    })
    
    laySection:AddButton({
        Name = "Save Layout",
        Callback = function()
            itemNames = nil
            itemPositions = nil
            itemNames = {}
            itemPositions = {}
            for i, v in pairs(game.Workspace.DroppedParts:GetChildren()) do
                for i, v in pairs(myfac:GetChildren()) do
                    if v.Name ~= "AdjustSpeed" and v.Name ~= "Owner" and v.Name ~= "Producing" and v.Name ~= "SpecialMusic" and v.Name ~= "Base" then
                        table.insert(itemNames, i, v.Name)
                        table.insert(itemPositions, i, convert(v.Hitbox.CFrame))
                    end
                end
            end
        end
    })

    laySection:AddButton({
        Name = "Load Layout",
        Callback = function()
            game:GetService("ReplicatedStorage"):WaitForChild("DestroyAll"):InvokeServer()
            for i=1, #itemPositions do
                place(itemNames[i],itemPositions[i])
                place(itemNames[i],itemPositions[i])
            end
        end
    })
    
    local oreSection = Main:AddSection({Name = "Ores"})

    oreSection:AddToggle({
        Name = "Ore Boost",
        Default = false,
        Callback = function(v)
            getgenv().OreBoost = v
        end
    })
    
    oreSection:AddToggle({
        Name = "Spawn Ores at Furnace",
        Default = false,
        Callback = function(v)
            getgenv().OreFurnace = v
        end
    })

    oreSection:AddToggle({
        Name = "Auto Remote",
        Default = false,
        Callback = function(v)
            getgenv().AutoRemote = v
            autoRemote()
        end
    })

    oreSection:AddButton({
        Name = "Universal Ore Boost",
        Callback = function()
            function move(upg, furnace)
                upg.Position = furnace.Position + Vector3.new(0,1,0)
                upg.Size = Vector3.new(3,3,3)
                upg.Rotation = Vector3.new(0,0,0)
            end
            local Upgraders = nil
            local Upgraders = {}
            for i, v in pairs(myfac.Parent:GetDescendants()) do
                if v.Name == "Upgrade" then
                    table.insert(Upgraders,v)
                elseif v.Name == "Upgrader" then
                    table.insert(Upgraders,v)
                elseif v.Name == "Upgrade2" then
                    table.insert(Upgraders,v)
                end
            end
            for i, v in pairs(myfac:GetChildren()) do
                if v:IsA("Model") and v.Model:FindFirstChild("Lava") then
                    furnace = v.Model.Lava
                end
            end
            for i=1, #Upgraders do
                move(Upgraders[i], furnace)
            end
        end
    })

    oreSection:AddButton({
        Name = "TP Ores",
        Callback = function()
            for i, v in pairs(game.Workspace.DroppedParts:GetChildren()) do
                v.Position = Vector3.new(plr.Character.HumanoidRootPart.CFrame)
            end
        end
    })

    oreSection:AddToggle({
        Name = "Become The Ore",
        Default = false,
        Callback = function(v)
            getgenv().BecomeTheOre = v
        end
    })

    local BoxWin = Window:MakeTab({
        Name = "Boxes",
        Icon = "rbxassetid://5140907242",
        PremiumOnly = false
    })

    local boxSection = BoxWin:AddSection({Name = "Boxes"})

    boxSection:AddToggle({
        Name = "Box Farm",
        Default = false,
        Callback = function(v)
            getgenv().BoxFarm = v
            currentBoxes()
        end
    })

    boxSection:AddToggle({
        Name = "Open Boxes",
        Default = false,
        Callback = function(v)
            getgenv().BoxOpen = v
            openBoxes()
        end
    })

    boxSection:AddDropdown({
        Name = "Box Options",
        Default = "Regular",
        Options = {"Regular", "Unreal", "Inferno"},
        Callback = function(v)
            BoxOption = v
        end
    })

    local guiWin = Window:MakeTab({
        Name = "GUIs",
        Icon = "rbxassetid://5670621831",
        PremiumOnly = false
    })

    local guiSection1 = guiWin:AddSection({Name = "Useful"})

    guiSection1:AddButton({
        Name = "Craftsman",
        Callback = function()
            --
        end
    })
    
    guiSection1:AddButton({
        Name = "Masked Man",
        Callback = function()
            --
        end
    })

    local plrWin = Window:MakeTab({
		Name = "Player",
        Icon = Players:GetUserThumbnailAsync(plr.UserId, Enum.ThumbnailType.HeadShot, Enum.ThumbnailSize.Size100x100),
        PremiumOnly = false
	})

    local plrSection1 = plrWin:AddSection({Name = "Teleports"})

    plrSection1:AddButton({
        Name = "Teleport to Base",
        Callback = function()
            plr.Character.HumanoidRootPart.CFrame = Base.CFrame * CFrame.new(0,3,0)
        end
    })
    
    local plrSection2 = plrWin:AddSection({Name = "Attributes"})

    plrSection2:AddSlider({
        Name = "Walk Speed",
        Min = 16,
        Max = 300,
        Default = plr.Character.Humanoid.WalkSpeed,
        Color = Color3.fromRGB(255,255,255),
        Increment = 1,
        ValueName = "",
        Callback = function(v)
            plr.Character.Humanoid.WalkSpeed = v
            speed = v
        end
    })

    plrSection2:AddSlider({
        Name = "Jump Power",
        Min = 50,
        Max = 300,
        Default = plr.Character.Humanoid.JumpPower,
        Color = Color3.fromRGB(255,255,255),
        Increment = 1,
        ValueName = "",
        Callback = function(v)
            plr.Character.Humanoid.JumpPower = v
            jump = v
        end
    })

    plrSection2:AddToggle({
        Name = "Lock Attributes",
        Default = false,
        Callback = function(v)
            getgenv().Speed = v
            getgenv().Jump = v
        end
    })

    local setWin = Window:MakeTab({
		Name = "Settings",
        Icon = "rbxassetid://5506279557",
        PremiumOnly = false
	})

    local setSection = setWin:AddSection({Name = "Settings"})

    setSection:AddButton({
        Name = "Destroy GUI",
        Callback = function()
            OrionLib:Destroy()
        end
    })

    setSection:AddBind({
        Name = "UI Keybind",
        Default = Enum.KeyCode.V,
        Hold = false,
        Callback = function()
            for i, v in pairs(game.CoreGui.HiddenUI.Orion:GetDescendants()) do
                if v:IsA("TextLabel") and v.Text == "MH FKR v1.9" then
                    frame = v.Parent.Parent
                end
            end
            if frame.Visible == false then
                frame.Visible = true
                frame:TweenSize(UDim2.new(0,615,0,344), Enum.EasingDirection.In, Enum.EasingStyle.Linear, 0.2, true)
            elseif frame.Visible == true then
                frame:TweenSize(UDim2.new(0, 0, 0, 0), Enum.EasingDirection.In, Enum.EasingStyle.Linear, 0.2, true)
                wait(0.2)
                frame.Visible = false
            end
        end    
    })

    -----------------------------------------------------

    game.Workspace.DroppedParts[myfacName].ChildAdded:Connect(function(ore)
        if getgenv().OreBoost then
            task.spawn(function()
                if string.match(ore.Name, "Coal") then
                    for i, v in pairs(myfac:GetChildren()) do
                        if string.match(v.Name, "Industrial") then
                            ore.Position = v.Model.Lava.Position + Vector3.new(0,0.5,0)
                            ore.Velocity = Vector3.new(0,0,0)
                            ore.CanCollide = true
                            task.wait()
                        end
                    end
                    return
                end
                local loop = false
                local target;
                local upgr;
                for i, v in pairs(myfac:GetChildren()) do
                    if v:IsA("Model") and v:FindFirstChild("Model") then
                        for i=1, #loopList do
                            if v.Name == loopList[i] then
                                target = capList[i] - 1
                                upgr = myfac[loopList[i]].Model.Upgrade
                                loop = true
                            end
                        end
                        if loop == true then
                            repeat
                                ore.Position = upgr.Position
                                task.wait()
                                ore.Position = Base.Position + Vector3.new(0,100,0)
                                task.wait()
                            until ore.Cash.Value >= target
                        end
                    end
                end
                local rCount = 0
                local upgraders = nil
                local resetters = nil
                local upgraders = {}
                local resetters = {}
                local stars = nil
                local stars = {}
                function upgrade(ore)
                    for i=1, #upgraders do
                        ore.Position = upgraders[i].Position
                        ore.Velocity = Vector3.new(0,0,0)
                        task.wait()
                        ore.Position = Base.Position + Vector3.new(0,100,0)
                        ore.Position = upgraders[i].Position
                        ore.Velocity = Vector3.new(0,0,0)
                        task.wait()
                    end
                end
                for i, v in pairs(myfac:GetChildren()) do
                    if v:IsA("Model") then
                        if v:FindFirstChild("Model") then
                            if string.match(v.Name, "Tesla") then
                                table.insert(resetters, v.Model.Upgrade)
                                rCount = rCount + 1
                            elseif v.Name == "The Final Upgrader" or v.Name == "The Ultimate Sacrifice" then
                                table.insert(resetters, v.Model.Upgrade)
                                rCount = rCount + 1
                            elseif v.Model:FindFirstChild("Upgrade2") then
                                table.insert(upgraders, v.Model.Upgrade2)
                            elseif v.Model:FindFirstChild("Upgrade") then
                                table.insert(upgraders, v.Model.Upgrade)
                            elseif v.Model:FindFirstChild("FunShield") then
                                table.insert(upgraders, v.Model.FunShield)
                            end
                        end
                    end
                end
                if string.match(ore.Name, "Sym") or ore.BrickColor == BrickColor.new("Dark blue") then
                    for i, v in pairs(myfac.Parent:GetDescendants()) do
                        if v.Name == "Catalyzed Star" then
                            table.insert(stars, v.Model.Upgrade)
                        elseif v.Name == "Nova Star" then
                            ore.Position = v.Model.Upgrade.Position
                            task.wait()
                        end
                    end
                    repeat
                        for i=1, #stars do
                            ore.Position = stars[i].Position
                            ore.Velocity = Vector3.new(0,0,0)
                            task.wait()
                            ore.Position = Base.Position + Vector3.new(0,100,0)
                        end
                    until ore.Cash.Value >= 1e+60
                end
                upgrade(ore)
                if rCount >= 1 then
                    ore.Position = resetters[1].Position
                    task.wait()
                    upgrade(ore)
                end
                if rCount >= 2 then
                    ore.Position = resetters[2].Position
                    task.wait()
                    upgrade(ore)
                end
                for i, v in pairs(myfac:GetDescendants()) do
                    if v.Name == "Lava" and v:IsA("Part") and v.Parent.Parent.Name ~= "Vulcan's Wrath" then
                        if v.Parent.Parent.Name:match("Dreamer") or v.Parent.Parent.Name:match("Teleport") or v.Parent.Parent.Name:match("Heart of Void") or v.Parent.Parent.Name:match("Industrial") then
                        else
                            ore.Position = v.Position + Vector3.new(0,1,0)
                            ore.Velocity = Vector3.new(0,0,0)
                            ore.CanCollide = false
                            task.wait()
                        end
                    end
                end
            end)
        end
        if getgenv().OreFurnace then
            task.spawn(function()
                if furnace then
                    ore.Position = furnace.Position + Vector3.new(0,0.5,0)
                else
                    for i, v in pairs(myfac:GetChildren()) do
                        if v:IsA("Model") then
                            if v:FindFirstChild("Model") then
                                if string.match(v.Parent.Parent.Name, "Teleport") then
                                elseif string.match(ore.Name, "Coal") and string.match(v.Parent.Parent.Name, "Industrial") then
                                    ore.Position = v.Position + Vector3.new(0,0.5,0)
                                    furnace = v
                                else
                                    ore.Position = v.Position + Vector3.new(0,0.5,0)
                                    furnace = v
                                end
                            end
                        end
                    end
                end
            end)
        end
        if getgenv().BecomeTheOre then
            task.spawn(function()
                repeat
                    ore.Position = plr.Character.HumanoidRootPart.Position
                    ore.CanCollide = false
                    task.wait(.5)
                until getgenv().BecomeTheOre == false
                ore.CanCollide = true
            end)
        end
    end)

    game.Players.LocalPlayer.Rebirths:GetPropertyChangedSignal("Value"):Connect(function()
        if getgenv().AutoLayout then
            task.spawn(function()
                local layoutarg = {
                    [1] = "Load",
                    [2] = layoutNum
                }
                repeat wait() until #myfac:GetChildren() < 6
                repeat
                task.wait(.75)
                game:GetService("ReplicatedStorage").Layouts:InvokeServer(unpack(layoutarg))
                until #myfac:GetChildren() > 6
            end)
        end
    end)

    game.Players.LocalPlayer.leaderstats.Cash:GetPropertyChangedSignal("Value"):Connect(function()
        if getgenv().AutoReborn then
            if string.match(game:GetService("Players").LocalPlayer.PlayerGui.Rebirth.Frame.Rebirth_Content.Content.Rebirth.Frame.Top.SkipBox.Label.Text, "Skip") then
                game:GetService("ReplicatedStorage").Rebirth:InvokeServer()
            end
        end
    end)

    game.Workspace.Boxes.ChildAdded:Connect(function(Box)
        if getgenv().BoxFarm then
            task.spawn(function()
                task.wait(.2)
                local originalPosition = plr.Character.HumanoidRootPart.CFrame
                local function teleportBack()
                    plr.Character.HumanoidRootPart.CFrame = originalPosition * CFrame.new(0,0,0)
                end
                plr.Character.HumanoidRootPart.CFrame = Box.CFrame * CFrame.new(0,0,0)
                task.wait(.5)
                teleportBack()
                task.wait(.5)
                if getgenv().AutoReborn then
                    if string.match(game:GetService("Players").LocalPlayer.PlayerGui.Rebirth.Frame.Rebirth_Content.Content.Rebirth.Frame.Top.SkipBox.Label.Text, "Skip") then
                        game:GetService("ReplicatedStorage").Rebirth:InvokeServer()
                    end
                end
                if getgenv().AutoLayout then
                    task.spawn(function()
                        local layoutarg = {
                            [1] = "Load",
                            [2] = layoutNum
                        }
                        repeat wait() until #myfac:GetChildren() < 6
                        repeat
                        task.wait(.75)
                        game:GetService("ReplicatedStorage").Layouts:InvokeServer(unpack(layoutarg))
                        until #myfac:GetChildren() > 6
                    end)
                end
            end)
        end
    end)

    game.Players.LocalPlayer.Character.Humanoid:GetPropertyChangedSignal("WalkSpeed"):Connect(function()
        if getgenv().Speed then
            game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = speed
        end
    end)

    game.Players.LocalPlayer.Character.Humanoid:GetPropertyChangedSignal("JumpPower"):Connect(function()
        if getgenv().Jump then
            game.Players.LocalPlayer.Character.Humanoid.JumpPower = jump
        end
    end)
    OrionLib:Init()
elseif game.Workspace:FindFirstChild("Tycoons") then
    local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/jensonhirst/Orion/main/source')))()
	local Window = OrionLib:MakeWindow({Name = "MH FKR v" ..version, HidePremium = true, SaveConfig = true, ConfigFolder = "hub/MHfkr2", IntroEnabled = true, IntroText = "Welcome to MH FKR v"..version..", "..plr.Name, IntroIcon = "rbxassetid://5670621915", Icon = "rbxassetid://5670621915"})
	
    local Base = plr.PlayerTycoon.Value.Base
    local myfac = Players.LocalPlayer.PlayerTycoon.Value
    myfacName = tostring(myfac)

    -------------------------- Functions
    function autoRemote()
        while getgenv().AutoRemote == true do
            for i, v in pairs(myfac:GetDescendants()) do
                if v.Name == "DropRate" then
                    if v.Value == "Manual" then
                        game:GetService("ReplicatedStorage"):WaitForChild("RemoteDrop"):FireServer()
                    end
                end
            end
            wait(.01)
        end
    end
    function openBoxes()
        while getgenv().BoxOpen == true do
            local box = {
                [1] = boxoption
            }
            game:GetService("ReplicatedStorage"):WaitForChild("MysteryBox"):InvokeServer(unpack(box))
            wait(5)
        end
    end
    function currentBoxes()
        if getgenv().BoxFarm then
            local originalPosition = plr.Character.HumanoidRootPart.CFrame
            local function teleportBack()
                plr.Character.HumanoidRootPart.CFrame = originalPosition * CFrame.new(0,0,0)
            end
            for _,v in pairs(game.Workspace.Boxes:GetChildren()) do
                plr.Character.HumanoidRootPart.CFrame = v.CFrame * CFrame.new(0,0,0)
                wait(.2)
            end
            wait(.2)
            teleportBack()
            if getgenv().AutoReborn then
                if string.match(game:GetService("Players").LocalPlayer.PlayerGui.Rebirth.Frame.Rebirth_Content.Content.Rebirth.Frame.Top.SkipBox.Label.Text, "Skip") then
                    game:GetService("ReplicatedStorage").Rebirth:InvokeServer()
                end
            end
        end
    end

    ---------------------------

	local Main = Window:MakeTab({
		Name = "Main",
        Icon = "rbxassetid://5506574548",
        PremiumOnly = false
	})

    local rbSection = Main:AddSection({Name = "Rebirthing"})

    rbSection:AddToggle({
        Name = "Auto Reborn",
        Default = false,
        Callback = function(v)
            getgenv().AutoReborn = v
        end
    })

    local laySection = Main:AddSection({Name = "Layouts"})

    laySection:AddToggle({
        Name = "Auto Layout",
        Default = false,
        Callback = function(v)
            getgenv().AutoLayout = v
        end
    })

    laySection:AddDropdown({
        Name = "Auto Layout",
        Default = "One",
        Options = {"One", "Two", "Three", "Four"},
        Callback = function(v)
            if v == "One" then
                layoutNum = v
            elseif v == "Two" then
                layoutNum = v
            elseif v == "Three" then
                layoutNum = v
            elseif v == "Four" then
                layoutNum = v
            end
        end
    })
    
    local oreSection = Main:AddSection({Name = "Ores"})

    oreSection:AddToggle({
        Name = "Ore Boost",
        Default = false,
        Callback = function(v)
            getgenv().OreBoost = v
        end
    })
    
    oreSection:AddToggle({
        Name = "Spawn Ores at Furnace",
        Default = false,
        Callback = function(v)
            getgenv().OreFurnace = v
        end
    })

    oreSection:AddToggle({
        Name = "Auto Remote",
        Default = false,
        Callback = function(v)
            getgenv().AutoRemote = v
            autoRemote()
        end
    })

    oreSection:AddButton({
        Name = "Universal Ore Boost",
        Callback = function()
            function move(upg, furnace)
                upg.Position = furnace.Position + Vector3.new(0,1,0)
                upg.Size = Vector3.new(3,3,3)
                upg.Rotation = Vector3.new(0,0,0)
            end
            local Upgraders = nil
            local Upgraders = {}
            for i, v in pairs(myfac.Parent:GetDescendants()) do
                if v.Name == "Upgrade" then
                    table.insert(Upgraders,v)
                elseif v.Name == "Upgrader" then
                    table.insert(Upgraders,v)
                elseif v.Name == "Upgrade2" then
                    table.insert(Upgraders,v)
                end
            end
            for i, v in pairs(myfac:GetChildren()) do
                if v:IsA("Model") and v.Model:FindFirstChild("Lava") then
                    furnace = v.Model.Lava
                end
            end
            for i=1, #Upgraders do
                move(Upgraders[i], furnace)
            end
        end
    })

    oreSection:AddButton({
        Name = "TP Ores",
        Callback = function()
            for i, v in pairs(game.Workspace.DroppedParts:GetChildren()) do
                v.CFrame = plr.Character.HumanoidRootPart.CFrame
            end
        end
    })

    oreSection:AddToggle({
        Name = "Become The Ore",
        Default = false,
        Callback = function(v)
            getgenv().BecomeTheOre = v
        end
    })

    local BoxWin = Window:MakeTab({
        Name = "Boxes",
        Icon = "rbxassetid://5140907242",
        PremiumOnly = false
    })

    local boxSection = BoxWin:AddSection({Name = "Boxes"})

    boxSection:AddToggle({
        Name = "Box Farm",
        Default = false,
        Callback = function(v)
            getgenv().BoxFarm = v
            currentBoxes()
        end
    })

    boxSection:AddToggle({
        Name = "Open Boxes",
        Default = false,
        Callback = function(v)
            getgenv().BoxOpen = v
            openBoxes()
        end
    })

    boxSection:AddDropdown({
        Name = "Box Options",
        Default = "Regular",
        Options = {"Regular", "Unreal", "Inferno"},
        Callback = function(v)
            BoxOption = v
        end
    })

    local guiWin = Window:MakeTab({
        Name = "GUIs",
        Icon = "rbxassetid://5670621831",
        PremiumOnly = false
    })

    local guiSection1 = guiWin:AddSection({Name = "Useful"})

    guiSection1:AddButton({
        Name = "Craftsman",
        Callback = function()
            --
        end
    })
    
    guiSection1:AddButton({
        Name = "Masked Man",
        Callback = function()
            --
        end
    })

    local plrWin = Window:MakeTab({
		Name = "Player",
        Icon = Players:GetUserThumbnailAsync(plr.UserId, Enum.ThumbnailType.HeadShot, Enum.ThumbnailSize.Size100x100),
        PremiumOnly = false
	})

    local plrSection1 = plrWin:AddSection({Name = "Teleports"})

    plrSection1:AddButton({
        Name = "Teleport to Base",
        Callback = function()
            plr.Character.HumanoidRootPart.CFrame = Base.CFrame * CFrame.new(0,3,0)
        end
    })
    
    local plrSection2 = plrWin:AddSection({Name = "Attributes"})

    plrSection2:AddSlider({
        Name = "Walk Speed",
        Min = 16,
        Max = 300,
        Default = plr.Character.Humanoid.WalkSpeed,
        Color = Color3.fromRGB(255,255,255),
        Increment = 1,
        ValueName = "",
        Callback = function(v)
            plr.Character.Humanoid.WalkSpeed = v
            speed = v
        end
    })

    plrSection2:AddSlider({
        Name = "Jump Power",
        Min = 50,
        Max = 300,
        Default = plr.Character.Humanoid.JumpPower,
        Color = Color3.fromRGB(255,255,255),
        Increment = 1,
        ValueName = "",
        Callback = function(v)
            plr.Character.Humanoid.JumpPower = v
            jump = v
        end
    })

    plrSection2:AddToggle({
        Name = "Lock Attributes",
        Default = false,
        Callback = function(v)
            getgenv().Speed = v
            getgenv().Jump = v
        end
    })

    local setWin = Window:MakeTab({
		Name = "Settings",
        Icon = "rbxassetid://5506279557",
        PremiumOnly = false
	})

    local setSection = setWin:AddSection({Name = "Settings"})

    setSection:AddButton({
        Name = "Destroy GUI",
        Callback = function()
            OrionLib:Destroy()
        end
    })

    setSection:AddBind({
        Name = "UI Keybind",
        Default = Enum.KeyCode.V,
        Hold = false,
        Callback = function()
            for i, v in pairs(game.CoreGui.HiddenUI.Orion:GetDescendants()) do
                if v:IsA("TextLabel") and v.Text == "MH FKR v1.9" then
                    frame = v.Parent.Parent
                end
            end
            if frame.Visible == false then
                frame.Visible = true
                frame:TweenSize(UDim2.new(0,615,0,344), Enum.EasingDirection.In, Enum.EasingStyle.Linear, 0.2, true)
            elseif frame.Visible == true then
                frame:TweenSize(UDim2.new(0, 0, 0, 0), Enum.EasingDirection.In, Enum.EasingStyle.Linear, 0.2, true)
                wait(0.2)
                frame.Visible = false
            end
        end    
    })

    -----------------------------------------------------

    game.Workspace.DroppedParts[myfacName].ChildAdded:Connect(function(ore)
        if getgenv().OreBoost then
            task.spawn(function()
                ore.CanCollide = false
                if string.match(ore.Name, "Coal") then
                    for i, v in pairs(myfac:GetChildren()) do
                        if string.match(v.Name, "Industrial") then
                            ore.Position = v.Model.Lava.Position + Vector3.new(0,0.5,0)
                            ore.Velocity = Vector3.new(0,0,0)
                            ore.CanCollide = true
                            task.wait()
                        end
                    end
                    return
                end
                local rCount = 0
                local upgraders = nil
                local resetters = nil
                local upgraders = {}
                local resetters = {}
                local stars = nil
                local stars = {}
                function upgrade(ore)
                    for i=1, #upgraders do
                        ore.Position = upgraders[i].Position
                        ore.Velocity = Vector3.new(0,0,0)
                        task.wait()
                    end
                end
                for i, v in pairs(game.Workspace.Tycoons:GetChildren()) do
                    for i, v in pairs(v:GetChildren()) do
                        if v:IsA("Model") then
                            if v:FindFirstChild("Model") then
                                if string.match(v.Name, "Tesla") then
                                    table.insert(resetters, v.Model.Upgrade)
                                    rCount = rCount + 1
                                elseif v.Name == "The Final Upgrader" or v.Name == "The Ultimate Sacrifice" then
                                    table.insert(resetters, v.Model.Upgrade)
                                    rCount = rCount + 1
                                elseif v.Model:FindFirstChild("Upgrade2") then
                                    table.insert(upgraders, v.Model.Upgrade2)
                                elseif v.Model:FindFirstChild("Upgrade") then
                                    table.insert(upgraders, v.Model.Upgrade)
                                end
                            end
                        end
                    end
                end
                if string.match(ore.Name, "Sym") or ore.BrickColor == BrickColor.new("Dark blue") then
                    for i, v in pairs(myfac.Parent:GetDescendants()) do
                        if v.Name == "Catalyzed Star" then
                            table.insert(stars, v.Model.Upgrade)
                        elseif v.Name == "Nova Star" then
                            ore.Position = v.Model.Upgrade.Position
                            task.wait()
                        end
                    end
                    repeat
                        for i=1, #stars do
                            ore.Position = stars[i].Position
                            ore.Velocity = Vector3.new(0,0,0)
                            ore.CanCollide = false
                            task.wait()
                            ore.Position = Base.Position + Vector3.new(0,100,0)
                        end
                    until ore.Cash.Value >= 1e+60
                end
                upgrade(ore)
                if rCount >= 1 then
                    ore.Position = resetters[1].Position
                    task.wait()
                    upgrade(ore)
                end
                if rCount >= 2 then
                    ore.Position = resetters[2].Position
                    task.wait()
                    upgrade(ore)
                end
                for i, v in pairs(myfac:GetDescendants()) do
                    if v.Name == "Lava" and v:IsA("Part") and v.Parent.Parent.Name ~= "Vulcan's Wrath" then
                        if v.Parent.Parent.Name:match("Dreamer") or v.Parent.Parent.Name:match("Teleport") or v.Parent.Parent.Name:match("Heart of Void") or v.Parent.Parent.Name:match("Industrial") then
                        else
                            ore.Position = v.Position + Vector3.new(0,3,0)
                            ore.Velocity = Vector3.new(0,0,0)
                            task.wait()
                        end
                    end
                end
            end)
        end
        if getgenv().OreFurnace then
            task.spawn(function()
                if furnace then
                    ore.Position = furnace.Position + Vector3.new(0,0.5,0)
                else
                    for i, v in pairs(myfac:GetChildren()) do
                        if v:IsA("Model") then
                            if v:FindFirstChild("Model") then
                                if string.match(v.Parent.Parent.Name, "Teleport") then
                                elseif string.match(ore.Name, "Coal") and string.match(v.Parent.Parent.Name, "Industrial") then
                                    ore.Position = v.Position + Vector3.new(0,0.5,0)
                                    furnace = v
                                else
                                    ore.Position = v.Position + Vector3.new(0,0.5,0)
                                    furnace = v
                                end
                            end
                        end
                    end
                end
            end)
        end
        if getgenv().BecomeTheOre then
            task.spawn(function()
                repeat
                    ore.Position = plr.Character.HumanoidRootPart.Position
                    ore.CanCollide = false
                    task.wait(.5)
                until getgenv().BecomeTheOre == false
                ore.CanCollide = true
            end)
        end
    end)

    game.Players.LocalPlayer.Rebirths:GetPropertyChangedSignal("Value"):Connect(function()
        if getgenv().AutoLayout then
            task.spawn(function()
                local layoutarg = {
                    [1] = "Load",
                    [2] = layoutNum
                }
                repeat wait() until #myfac:GetChildren() < 6
                repeat
                task.wait(.75)
                game:GetService("ReplicatedStorage").Layouts:InvokeServer(unpack(layoutarg))
                until #myfac:GetChildren() > 6
            end)
        end
    end)

    game.Players.LocalPlayer.leaderstats.Cash:GetPropertyChangedSignal("Value"):Connect(function()
        if getgenv().AutoReborn then
            if string.match(game:GetService("Players").LocalPlayer.PlayerGui.Rebirth.Frame.Rebirth_Content.Content.Rebirth.Frame.Top.SkipBox.Label.Text, "Skip") then
                game:GetService("ReplicatedStorage").Rebirth:InvokeServer()
            end
        end
    end)

    game.Workspace.Boxes.ChildAdded:Connect(function(Box)
        if getgenv().BoxFarm then
            task.spawn(function()
                task.wait(.2)
                local originalPosition = plr.Character.HumanoidRootPart.CFrame
                local function teleportBack()
                    plr.Character.HumanoidRootPart.CFrame = originalPosition * CFrame.new(0,0,0)
                end
                plr.Character.HumanoidRootPart.CFrame = Box.CFrame * CFrame.new(0,0,0)
                task.wait(.5)
                teleportBack()
                task.wait(.5)
                if getgenv().AutoReborn then
                    if string.match(game:GetService("Players").LocalPlayer.PlayerGui.Rebirth.Frame.Rebirth_Content.Content.Rebirth.Frame.Top.SkipBox.Label.Text, "Skip") then
                        game:GetService("ReplicatedStorage").Rebirth:InvokeServer()
                    end
                end
                if getgenv().AutoLayout then
                    task.spawn(function()
                        local layoutarg = {
                            [1] = "Load",
                            [2] = layoutNum
                        }
                        repeat wait() until #myfac:GetChildren() < 6
                        repeat
                        task.wait(.75)
                        game:GetService("ReplicatedStorage").Layouts:InvokeServer(unpack(layoutarg))
                        until #myfac:GetChildren() > 6
                    end)
                end
            end)
        end
    end)

    game.Players.LocalPlayer.Character.Humanoid:GetPropertyChangedSignal("WalkSpeed"):Connect(function()
        if getgenv().Speed then
            game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = speed
        end
    end)

    game.Players.LocalPlayer.Character.Humanoid:GetPropertyChangedSignal("JumpPower"):Connect(function()
        if getgenv().Jump then
            game.Players.LocalPlayer.Character.Humanoid.JumpPower = jump
        end
    end)
    OrionLib:Init()
elseif game.PlaceId == 15055025587 then
    local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/ShadowrrGTHB/Shade/refs/heads/main/source.lua'))()
    local fishbtn = workspace.Buttons.FishInPondFree
    workspace.CollectionRangePart.Size = Vector3.new(1000,0.25,1000)
    workspace.CollectionRangePart.Transparency = 1
    workspace.CollectionRangePart.SurfaceGui.Enabled = false
    local fishing;
    
    local Window = Rayfield:CreateWindow({
       Name = "Eggy Incremental",
       Icon = 5670621915, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
       LoadingTitle = "Loading...",
       LoadingSubtitle = "Welcome to 257 Hub v"..version..", "..plr.Name,
       Theme = "Default", -- Check https://docs.sirius.menu/rayfield/configuration/themes
    
       DisableRayfieldPrompts = false,
       DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface
    
       ConfigurationSaving = {
          Enabled = true,
          FolderName = "257", -- Create a custom folder for your hub/game
          FileName = "eggtree"
       },
    
       Discord = {
          Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
          Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
          RememberJoins = true -- Set this to false to make them join the discord every time they load it up
       },
    
       KeySystem = true, -- Set this to true to use our key system
       KeySettings = {
          Title = "Welcome, " ..plr.Name,
          Subtitle = "v " ..version,
          Note = "No Key? Tuff", -- Use this to tell the user how to get a key
          FileName = "etKey", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
          SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
          GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
          Key = {"faggotry"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
       }
    })
    
    local Tab = Window:CreateTab("Main", 15055998727)
    
    local EggToggle = Tab:CreateToggle({
       Name = "Auto Collect Eggs",
       CurrentValue = false,
       Flag = "eggcollect",
       Callback = function(v)
          getgenv().AutoCollectEggs = v
       end,
    })
    
    local CrateToggle = Tab:CreateToggle({
        Name = "Auto Collect Crates",
        CurrentValue = false,
        Flag = "cratecollect",
        Callback = function(v)
            getgenv().AutoCollectCrates = v
            if game.Workspace.Crates:FindFirstChild("CurrencyCrate") then
                task.spawn(function()
                    local originalPosition = plr.Character.HumanoidRootPart.CFrame
                    local function returnPlayer()
                        if getgenv().Fishing then
                            plr.Character.HumanoidRootPart.CFrame = fishbtn.CFrame * CFrame.new(0,3,0)
                            plr.Character.HumanoidRootPart.Velocity = Vector3.new(0,0,0)
                        else
                            plr.Character.HumanoidRootPart.CFrame = originalPosition * CFrame.new(0,3,0)
                            plr.Character.HumanoidRootPart.Velocity = Vector3.new(0,0,0)
                        end
                    end
                    for i, v in pairs(game.Workspace.Crates:GetChildren()) do
                        plr.Character.HumanoidRootPart.CFrame = v:WaitForChild("Primary").CFrame * CFrame.new(0,3,0)
                        plr.Character.HumanoidRootPart.Velocity = Vector3.new(0,0,0)
                        task.wait(.5)
                        plr.Character.HumanoidRootPart.CFrame = game.Workspace.BoxMachine.DelieveryZone.CFrame * CFrame.new(0,5,0)
                        plr.Character.HumanoidRootPart.Velocity = Vector3.new(0,0,0)
                        task.wait(.5)
                    end
                    returnPlayer()
                    task.wait(.2)
                end)
            end
        end,
    })

    local FishToggle = Tab:CreateToggle({
        Name = "Auto Fish + Crate",
        CurrentValue = false,
        Flag = "fishcollect",
        Callback = function(v)
            getgenv().Fishing = v
            if game.Workspace.Crates:FindFirstChild("CurrencyCrate") then
                task.spawn(function()
                    local originalPosition = plr.Character.HumanoidRootPart.CFrame
                    local function returnPlayer()
                        if getgenv().Fishing then
                            plr.Character.HumanoidRootPart.CFrame = fishbtn.CFrame * CFrame.new(0,3,0)
                            plr.Character.HumanoidRootPart.Velocity = Vector3.new(0,0,0)
                        else
                            plr.Character.HumanoidRootPart.CFrame = originalPosition * CFrame.new(0,3,0)
                            plr.Character.HumanoidRootPart.Velocity = Vector3.new(0,0,0)
                        end
                    end
                    for i, v in pairs(game.Workspace.Crates:GetChildren()) do
                        plr.Character.HumanoidRootPart.CFrame = v:WaitForChild("Primary").CFrame * CFrame.new(0,3,0)
                        plr.Character.HumanoidRootPart.Velocity = Vector3.new(0,0,0)
                        task.wait(.5)
                        plr.Character.HumanoidRootPart.CFrame = game.Workspace.BoxMachine.DelieveryZone.CFrame * CFrame.new(0,5,0)
                        plr.Character.HumanoidRootPart.Velocity = Vector3.new(0,0,0)
                        task.wait(.5)
                    end
                    returnPlayer()
                    task.wait(.2)
                end)
            end
        end,
    })
    
    local tpTab = Window:CreateTab("Teleports", 16831482778)
    
    local tpBtn1 = tpTab:CreateButton({
        Name = "Teleport to Eggs",
        Callback = function()
            plr.Character.HumanoidRootPart.CFrame = game.Workspace.Field.CFrame * CFrame.new(0,3,0)
        end,
    })
    
    local tpBtn2 = tpTab:CreateButton({
        Name = "Teleport to Crates",
        Callback = function()
            plr.Character.HumanoidRootPart.CFrame = game.Workspace.CrateField.CFrame * CFrame.new(0,3,0)
        end,
    })
    
    local tpBtn3 = tpTab:CreateButton({
        Name = "Teleport to Pets",
        Callback = function()
            plr.Character.HumanoidRootPart.CFrame = CFrame.new(74,4,-139) * CFrame.new(0,0,0)
        end,
    })
    
    local tpBtn4 = tpTab:CreateButton({
        Name = "Teleport to Fishing Area",
        Callback = function()
            plr.Character.HumanoidRootPart.CFrame = fishbtn.CFrame * CFrame.new(0,3,0)
        end,
    })
    
    local setTab = Window:CreateTab("Settings", 5506279557)
    
    local destroyBtn = setTab:CreateButton({
        Name = "Destroy GUI",
        Callback = function()
            Rayfield:Destroy()
        end,
    })
    
    Rayfield:LoadConfiguration()
    
    game.Workspace.CollectionRangePart:GetPropertyChangedSignal("Size"):Connect(function()
       if getgenv().AutoCollectEggs then
           workspace.CollectionRangePart.Size = Vector3.new(1000,0.25,1000)
       end
    end)
    
    game.Workspace.Crates.ChildAdded:Connect(function(crate)
       wait(1)
       if getgenv().AutoCollectCrate or getgenv().Fishing then
           task.spawn(function()
               local originalPosition = plr.Character.HumanoidRootPart.CFrame
               local function returnPlayer()
                    if getgenv().Fishing then
                        plr.Character.HumanoidRootPart.CFrame = fishbtn.CFrame * CFrame.new(0,3,0)
                        plr.Character.HumanoidRootPart.Velocity = Vector3.new(0,0,0)
                    else
                        plr.Character.HumanoidRootPart.CFrame = originalPosition * CFrame.new(0,3,0)
                        plr.Character.HumanoidRootPart.Velocity = Vector3.new(0,0,0)
                    end
               end
               plr.Character.HumanoidRootPart.CFrame = crate:WaitForChild("Primary").CFrame * CFrame.new(0,5,0)
               task.wait(.2)
               plr.Character.HumanoidRootPart.CFrame = game.Workspace.BoxMachine.DelieveryZone.CFrame * CFrame.new(0,3,0)
               plr.Character.HumanoidRootPart.Velocity = Vector3.new(0,0,0)
               task.wait(.2)
               returnPlayer()
               task.wait(.2)
           end)
       end
    end)
end
